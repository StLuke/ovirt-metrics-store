---
- name: Install necessary packages
  hosts: all
  tasks:
    - name: Set variables
      set_fact:
        file_path: '/root/elasticsearch.rpm'
        elastic_url: '"https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/rpm/elasticsearch/2.3.5/elasticsearch-2.3.5.rpm"'
    - name: Remove rpm if it was already downloaded
      file:
        path: "{{ file_path }}"
        state: absent
      when: remove_old_elastic is defined
    - name: Download elastic search from official pages
      get_url:
        url: "{{ elastic_url }}"
        dest: "{{ file_path }}"
    - name: Install the rpm of elastic search
      yum:
        name: "{{ file_path }}"
        state: "present"
    - name: Install ovirt repo for fluentd
      yum:
        name: "http://resources.ovirt.org/pub/yum-repo/ovirt-release-master.rpm"
        state: present
    - name: Install necessary packages
      yum:
        name: "{{ item }}"
        state: "present"
      with_items:
        - "kibana"
        - "fluentd"
        - "rubygem-fluent-plugin-elasticsearch"
    - name: Install fluentd
      yum:
        name: "fluentd"
        state: "present"
    - name: Install fluentd
      yum:
        name: "rubygem-fluent-plugin-elasticsearch"
        state: "present"


- name: Set up fluentd
  hosts: all
  tasks:
    - name: Download config for fluentd to metrics machine
      copy:
        src: ../conf/metrics-store-fluentd.conf
        dest: /etc/fluentd/fluent.conf
        owner: fluentd
        group: fluentd
        mode: 0644
        backup: yes

    - name: Enable listening of elasticsearch
      lineinfile:
        dest: /etc/elasticsearch/elasticsearch.yml
        line: "{{ item }}"
        state: present
      with_items:
        - 'http.cors.allow-origin: "*"'
        - 'network.host: "localhost"'
    - name: Copy firewall foward xml
      copy:
        src: ../conf/ovirt-fluentd-forward.xml
        dest: /etc/firewalld/services/
    - name: restart firewalld service to reload config
      service:
        name: firewalld
        state: restarted

    - name: Open firewall for fluentd foward
      firewalld:
        service: ovirt-fluentd-forward
        zone: public
        permanent: true
        immediate: yes
        state: enabled
    - name: Install secure forward rubygem
      yum:
        name: rubygem-fluent-plugin-secure-forward
        state: present

    - name: Create direcotry for fluentd certs
      file:
        path: "{{ item }}"
        state: directory
        mode: 750
        owner: fluentd
        group: fluentd
      with_items:
        - "/etc/pki/fluentd/certs"
        - "/etc/pki/fluentd/requests"
        - "/etc/pki/fluentd/keys"

    - name: Generate key certificate
      command: openssl genrsa -out /etc/pki/fluentd/keys/fluentd-key.pem -passout pass:central-password -des3 2048

    - name: Generate request certificate
      command: openssl req -new -days 365 -key /etc/pki/fluentd/keys/fluentd-key.pem -out /etc/pki/fluentd/requests/fluentd-request.pem -passin pass:central-password -batch -subj /


    - name: Restart fluentd service and check its running
      service:
        name: fluentd
        state: "{{ item }}"
        enabled: yes
      with_items:
        - restarted
        - started
      tags:
        - always

- name: Set-up Kibana
  hosts: all
  tasks:
    - name: Open firewall port for kibana
      firewalld:
        port: 5601/tcp
        zone: public
        state: enabled
        immediate: yes
        permanent: true

    - name: Restart kibaba service
      service:
        name: kibana
        state: "{{ item }}"
        enabled: yes
      with_items:
        - restarted
        - started
      tags:
        - always

    - name: Set variables
      set_fact:
        kibana_url_metrics: 'http://localhost:9200/_template/ovirt_metrics'
        kibana_url_metadata: 'http://localhost:9200/_template/ovirt_metadata'
        kibana_template_ovirt_metrics: '\{ "template": "ovirt-metrics-", "order": 1, "settings": { "number_of_shards": 1 , "number_of_replicas": 1 }, "mappings": { "host_statistics": { "_parent": { "type": "host_metadata" }, "dynamic_templates": [ { "strings": { "mapping": { "index": "not_analyzed", "type": "string" }, "match_mapping_type": "string", "match": "" } } ] } } }'
        kibana_template_ovirt_metadata: '\{ "template": "ovirt-metadata*", "order": 1, "settings": { "number_of_shards": 1, "number_of_replicas": 1 }, "mappings": { "vm_metadata": { "dynamic_templates": [ { "strings": { "mapping": { "index": "not_analyzed", "type": "string" }, "match_mapping_type": "string", "match": "" } } ] }, "host_metadata": { "dynamic_templates": [ { "strings": { "mapping": { "index": "not_analyzed", "type": "string" }, "match_mapping_type": "string", "match": "" } } ] } } }'
    - name: Create index ovirt-metrics-
      command: curl -XPUT "{{ kibana_url_metrics }}"  -d  "{{ kibana_template_ovirt_metrics }}"
    - name: Create index ovirt-metadata
      command: curl -XPUT "{{ kibana_url_metadata }}"  -d  "{{ kibana_template_ovirt_metadata }}"

- name: Start elasticsearch service and check its running
  hosts: all
  tasks:
    - name: Make sure java is installed on the machine
      yum:
        name: java
        state: present
    - name: Restart elasticsearch service
      service:
        name: elasticsearch
        state: "{{ item }}"
        enabled: yes
      with_items:
        - restarted
        - started
      tags:
        - always
